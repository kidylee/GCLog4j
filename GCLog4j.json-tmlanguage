{ "name": "GCLog4j",
        "scopeName": "text.GCLog4j",
	"fileTypes": ["log"],
	"patterns": [

			{ "include": "#debug" },
			{ "include": "#info" },
			{ "include": "#error" },
			{ "include": "#warn" }
	],
	"repository": {
		"debug":{
			"patterns":[
				{ 
				  	"name": "entity.ignore.log4j",
				  	"begin": "^DEBUG",
				  	"end": "\\n",
				  	"patterns": [
				  		{ "include": "#common" }
				  	]
				}
			]
		},
 
		"info":{
			"patterns": [
				{ "name": "entity.ignore.log4j",
				  "begin": "^INFO",
				  "end": "\\n",
				  "patterns": [
				  		{ "include": "#common" }
				  	]
				}
			]
		},
 
		"error":{
			"patterns": [
				{ "name": "entity.error.log4j",
				  "begin": "^ERROR",
				  "end": "\\n",
				  "patterns": [
				  		{ "include": "#common" }
				  	]
				}
			]
		},
		"warn":{
			"patterns": [
				{ "name": "entity.warn.log4j",
				  "begin": "^WARN",
				  "end": "\\n",
				  "patterns": [
				  		{ "include": "#common" }
				  	]
				}
			]
		},
		"common":{
			"patterns": [
				{ "include": "#equal" },
				{ "include": "#timestamp" },
				{ "include": "#threads" },
				{ "include": "#sql" },
				{ "include": "#task" },
				{ "include": "#usecastxn" },
				{ "include": "#usecaselog" },
				{ "include": "#reference" }
			]
			
		},
		"threads":{
			"patterns": [
				{ "include": "#thread0" },
				{ "include": "#thread1" },
				{ "include": "#thread2" },
				{ "include": "#thread3" },
				{ "include": "#thread4" }
			]
		},
		"timestamp":{
			"patterns":[
				{  "name": "entity.timestamp.log4j",
				   "match": "\\d{4}-\\d{2}-\\d{2}.\\d{2}:\\d{2}:\\d{2},\\d{3}"
				}
			]
		},
 
 
		"thread0":{
			"patterns": [
				{  "name": "entity.thread0.log4j",
				   "match": "(?<=\\[)remediationQueueEndpoint\\d\\\\d?.listener\\.0(?=\\])"
				}
			]
		},
		"thread1":{
			"patterns": [
				{  "name": "entity.thread1.log4j",
				   "match": "(?<=\\[)remediationQueueEndpoint\\d\\\\d?.listener\\.1(?=\\])"
				}
			]
		},
		"thread2":{
			"patterns": [
				{  "name": "entity.thread2.log4j",
				   "match": "(?<=\\[)remediationQueueEndpoint\\d\\\\d?.listener\\.2(?=\\])"
				}
			]
		},
		"thread3":{
			"patterns": [
				{  "name": "entity.thread3.log4j",
				   "match": "(?<=\\[)remediationQueueEndpoint\\d\\\\d?.listener\\.3(?=\\])"
				}
			]
		},
		"thread4":{
			"patterns": [
				{  "name": "entity.thread4.log4j",
				   "match": "(?<=\\[)remediationQueueEndpoint\\d\\\\d?.listener\\.4(?=\\])"
				}
			]
		},
		"sql":{
			"patterns": [
				{ "name": "entity.text.log4j",
				  "begin": "(?<=Creating.PreparedStatement.for)",
				  "end": "\\n",
				  "patterns": [
				  		{  "name": "keyword.other.DML.sql",
				  		   "match": "(?i)\\b(select(\\s+distinct)?|insert\\s+(ignore\\s+)?into|update|delete|from|set|where|group\\sby|or|like|and|union(\\s+all)?|having|order\\sby|limit|(inner|cross)\\s+join|straight_join|(left|right)(\\s+outer)?\\s+join|natural(\\s+(left|right)(\\s+outer)?)?\\s+join)\\b"
				  		},
				  		{ "include": "#equal" }
				  ]
				}
			]
		},
		"task":{
			"patterns": [
				{ "name": "entity.task.log4j",
				  "begin": "(?<=receives.a.message.CoreMessage)",
				  "end": "\\]",
				  "patterns": [
				  		{ "name": "entity.xml.log4j",
				  		  "begin": "(?<=request=)",
				  		  "end": "(?=\\])",
				  		  "patterns": [
				  		  		{ "include": "#xml" } 
				  		  ]
				  		}
				  ]
				},
				{ "name": "entity.task.log4j",
				  "begin": "(?<=Forwarding message CoreMessage)",
				  "end": "\\]",
				  "patterns": [
				  		{ "name": "entity.xml.log4j",
				  		  "begin": "(?<=request=)",
				  		  "end": "(?=\\])",
				  		  "patterns": [
				  		  		{ "include": "#xml" } 
				  		  ]
				  		  
				  		}
				  ]
				}
			]
		},
		"equal":{
			"patterns": [
				{  "name": "entity.fatal.log4j",
				   "match": "(\\w+?\\s?)(\\=)(.*?)(?=\\,|\\[|\\])",
				   "captures": {
				       "1": { "name": "entity.key.log4j" },
				       "2": { "name": "entity.equal.log4j" },
				       "3": { "name": "entity.value.log4j" }

				   }
				}
			]
		},
		"usecastxn":{
			"patterns": [
				{ "name": "entity.text.log4j",
				  "begin": "UseCaseTxnucTxnId=",
				  "end": "\\n",
				  "patterns": [
				  		{ "include": "#equal" },
				  		{ "include": "#stage" }
				  ]
				}
			]
		},
		"stage":{
			"patterns": [
				{  "name": "entity.stage.log4j",
				   "match": "(stage)(.+)$"
				   
				}
			]
		},
		"usecaselog":{
			"patterns": [
				{ "name": "entity.usecase.log4j",
				  "begin": "\\[[a-zA-Z]{3}\\d{2}\\]",
				  "end": "\\n"
				}
			]
		},
		"reference":{
			"patterns": [
				{ "name": "entity.reference.log4j",
				  "begin": "(getReference.+)|(populate) \\-",
				  "end": "\\n",
				  "patterns": [
				  	{ "include": "#equal" }
				  ]
				}
			]
		},
		"xml":{
			"patterns": [
				{  "name": "entity.tag.log4j",
				   "match": "(<)(.+?)(>)"
				}
			]
		}
	},
	"uuid": "59d2eab0-506c-4c33-8e2f-a6a74820383a"
}